@using System.Net.Http.Json
@using System.Text.Json;
@using Microsoft.AspNetCore.Authorization
@using SdWP.DTO.Responses
@using SdWP.DTO.Requests
@using BlazorBootstrap

@inject HttpClient Http
@inject IJSRuntime JSRuntime

@page "/admin/users-list"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

<h3>AllUsersList</h3>

<button class="btn btn-primary" @onclick="ShowRegisterModal">Register new user</button>

<table id="userTable" class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<!-- delete modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this user?<br>
                <strong class="text-danger">This action cannot be undone.</strong>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteUserButton" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- register modal-->
<div class="modal fade" id="registerUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="registerUserForm">
                <div class="modal-header">
                    <h5 class="modal-title">Register New User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="alert d-none" id="registerUserMessage"></div>

                    <div class="mb-3">
                        <label for="registerName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="registerName" required />
                    </div>

                    <div class="mb-3">
                        <label for="registerEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="registerEmail" required />
                    </div>

                    <div class="mb-3">
                        <label for="registerPassword" class="form-label">Password</label>
                        <input type="password" class="form-control" id="registerPassword" required />
                    </div>

                    <div class="mb-3">
                        <label for="registerConfirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="registerConfirmPassword" required />
                    </div>

                    <div class="mb-3">
                        <label for="registerRole" class="form-label">Role</label>
                        <select class="form-select" id="registerRole" required>
                            <option value="">Select role</option>
                            <option value="User">User</option>
                            <option value="Admin">Admin</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Create Account</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- edit modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editUserForm">
                <div class="modal-header">
                    <h5 class="modal-title">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="alert d-none" id="editUserMessage"></div>
                    <input type="hidden" id="editUserId" />

                    <div class="mb-3">
                        <label for="editName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="editName" />
                    </div>

                    <div class="mb-3">
                        <label for="editEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="editEmail" />
                    </div>

                    <div class="mb-3">
                        <label for="editRole" class="form-label">Role</label>
                        <select class="form-select" id="editRole">
                            <option value="">Select role</option>
                            <option value="User">User</option>
                            <option value="Admin">Admin</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await JSRuntime.InvokeVoidAsync("usersModals.init");

                await Task.Delay(100);
                await JSRuntime.InvokeVoidAsync("initializeUserTable");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error initializing user table: {ex.Message}");
            }
        }
    }

    private async Task ShowRegisterModal()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("showRegisterModal");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error showing register modal: {ex.Message}");
        }
    }

    public async ValueTask DisposeAsync()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("eval", "$('#userTable').DataTable().destroy();");
        }
        catch (Exception)
        {
        }
    }
}