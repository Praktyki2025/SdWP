@page "/projects/add"
@using System.ComponentModel.DataAnnotations
@using SdWP.Data.Models;
@using SdWP.Data.Interfaces;
@using Microsoft.AspNetCore.Components.Authorization;
@rendermode InteractiveServer

<PageTitle>Add Project</PageTitle>

<EditForm Model="project" OnValidSubmit="AddProjectToDbAsync" FormName="AddProjectForm">
    <DataAnnotationsValidator />
    <ValidationSummary class="alert alert-danger" />

    <div class="row mb-3">
        <div class="col-md-6">
            <label for="titleInput" class="form-label">Title</label>
            <InputText id="titleInput" class="form-control" @bind-Value="project.Title" placeholder="Title" />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label for="descriptionInput" class="form-label">Description</label>
            <InputText id="descriptionInput" class="form-control" @bind-Value="project.Description" placeholder="Description" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Confirm</button>
</EditForm>

@code {
    [Inject] public IProjectRepository ProjectRepository { get; set; }
    [Inject] public NavigationManager Navigation { get; set; }
    [Inject] public ToastService ToastService { get; set; }
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private Project project = new Project();

    protected override void OnInitialized()
    {
        project.CreatedAt = DateTime.Now;
        project.LastModified = DateTime.Now;
    }

    private async Task AddProjectToDbAsync()
    {
        try
        {
            var authState = await AuthenticationStateTask;
            var user = authState.User;

            
            if (user != null && user.Identity.IsAuthenticated)
            {
          
                {
                    
                    ToastService.Notify(new ToastMessage(ToastType.Warning, "Brak identyfikatora użytkownika."));
                    return; 
                }

                await ProjectRepository.AddProjectAsync(project);

                ToastService.Notify(new ToastMessage(ToastType.Success, "Projekt dodano pomyślnie."));
                NavigationManager.NavigateTo("projects");
            }
            else
            {
                // Obsługa przypadku, gdy użytkownik nie jest zalogowany
                ToastService.Notify(new ToastMessage(ToastType.Danger, "Musisz być zalogowany, aby dodać projekt."));
                // Opcjonalnie, przekieruj na stronę logowania
                NavigationManager.NavigateTo("login");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding project: {ex}");
            ToastService.Notify(new ToastMessage(ToastType.Danger, "Błąd podczas dodawania projektu"));
        }
}
}