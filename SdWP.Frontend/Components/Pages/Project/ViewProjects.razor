@page "/projects"
@inject IJSRuntime JS
@rendermode InteractiveServer
@using ProjectInteractions

<div class="d-flex justify-content-end mb-12">
    <Button Class="add-project-btn" Color="ButtonColor.Success" Id="addProjectBtn">Add project</Button>
</div>

<table id="projectsViewTable" class="display">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<ConfirmDialog @ref="dialog" />
<Button Color="ButtonColor.Primary" @onclick="OnDeleteProjectAsync">Vertically centered modal</Button>

@code {
	[Inject] private ToastService ToastService { get; set; } = default!;

    private ConfirmDialog dialog = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeDataTable");
        }
    }

    private async Task OnDeleteProjectAsync()
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("Id", 321); //321 => Project ID to delete


        var confirmation = await dialog.ShowAsync<ProjectDemoComponent>("Are you sure you want to delete this project?", parameters);

        Console.WriteLine(confirmation);
        if (confirmation)
        {
            ToastService.Notify(new ToastMessage(ToastType.Success, $"Project deleted successfully."));
        }
        else
        {
            ToastService.Notify(new ToastMessage(ToastType.Secondary, $"Delete action canceled."));
        }
    }
}
