@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using SdWP.Frontend.Components.Layout
@using SdWP.Frontend.Enum
@using SdWP.Frontend.Functions

@attribute [Authorize(Roles = "User")]
@rendermode InteractiveServer

@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider Auth

@page "/user"

<h2>Welcome @userName</h2>

@code {
    private string? userName;
    
    [Inject]
    public SendLogToDatabase SendLogToDatabase { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await Auth.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity?.IsAuthenticated ?? false)
        {
            userName = user.Identity.Name ?? "user";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                await JSRuntime.InvokeVoidAsync("destroyUserTable");
                await JSRuntime.InvokeVoidAsync("cleanupAllDataTables");
            }
        }
        catch (Exception e)
        {
            await SendLogToDatabase.SendLogAsync(
                $"Error during Admin dashboard {e.Message} | throw {e.InnerException}",
                e.StackTrace,
                e.Source,
                TypeOfLog.Error);
        }
    }
}